"""Remove uuid from user, add permissions

Revision ID: f435c6e54cad
Revises: b2e368a82287
Create Date: 2022-07-21 17:14:57.775412

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "f435c6e54cad"
down_revision = "b2e368a82287"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.add_column("filter", sa.Column("user_id", sa.Integer(), nullable=False))
    op.drop_constraint("filter_user_uid_fkey", "filter", type_="foreignkey")
    op.drop_column("filter", "user_uid")

    op.add_column("rating", sa.Column("user_id", sa.Integer(), nullable=False))
    op.drop_constraint("rating_user_uid_fkey", "rating", type_="foreignkey")
    op.drop_column("rating", "user_uid")

    op.drop_table("user")

    op.create_table(
        "todays_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.Text(), nullable=False),
        sa.Column("password", sa.Text(), nullable=False),
        sa.Column("image", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )

    op.create_foreign_key(None, "filter", "todays_user", ["user_id"], ["id"])
    op.create_foreign_key(None, "rating", "todays_user", ["user_id"], ["id"])

    op.create_table(
        "permission",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "association_permission",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permission.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["todays_user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "permission_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "rating", sa.Column("user_uid", postgresql.UUID(), autoincrement=False, nullable=False)
    )
    op.drop_constraint("rating_user_id_fkey", "rating", type_="foreignkey")
    op.drop_column("rating", "user_id")

    op.add_column(
        "filter", sa.Column("user_uid", postgresql.UUID(), autoincrement=False, nullable=False)
    )
    op.drop_constraint("filter_user_id_fkey", "filter", type_="foreignkey")
    op.drop_column("filter", "user_id")

    op.drop_table("association_permission")
    op.drop_table("permission")
    op.drop_table("todays_user")

    op.create_table(
        "user",
        sa.Column("uid", postgresql.UUID(), nullable=False),
        sa.Column("email", sa.Text(), nullable=False),
        sa.Column("password", sa.Text(), nullable=False),
        sa.Column("image", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("uid"),
        sa.UniqueConstraint("email"),
    )

    op.create_foreign_key("filter_user_uid_fkey", "filter", "user", ["user_uid"], ["uid"])
    op.create_foreign_key("rating_user_uid_fkey", "rating", "user", ["user_uid"], ["uid"])
    # ### end Alembic commands ###
